node('Slave1'){
    stage("git clone"){
       checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'GITHUB', url: 'https://github.com/Saiteju1997/Capstrone-Project.git']]])
      }
    stage('SonarQube analysis') {
        def scannerHome = tool 'Sonar-3.2';
        withSonarQubeEnv('Sonar') 
        sh 'mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.3.0.603:sonar'
         '-f all/pom.xml ' +
          '-Dsonar.projectKey=com.huettermann:all:master ' +
          '-Dsonar.login=admin' +
          '-Dsonar.password=admin' +
          '-Dsonar.language=java' +
          '-Dsonar.sources=src' +
          '-Dsonar.test.inclusions=**/*Test*/**' +
          '-Dsonar.exclusions=**/*Test*/**'
    }
}
node{
    stage("git clone"){
        checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'GITHUB', url: 'https://github.com/Saiteju1997/Capstrone-Project.git']]])
    }
    stage("deploying artifacts"){        def server = Artifactory.server 'jfrog'
        def server = Artifactory.server 'jfrog' def rtMaven = Artifactory.newMavenBuild()
        def rtMaven = Artifactory.newMavenBuild()
        rtMaven.resolver server: server, releaseRepo: 'libs-release', snapshotRepo: 'libs-snapshot'
        rtMaven.deployer server: server, releaseRepo: 'libs-release-local', snapshotRepo: 'libs-snapshot-local'
        rtMaven.tool = 'Maven2'
        def buildInfo = rtMaven.run pom: 'pom.xml', goals: 'clean install'
  }
 }
